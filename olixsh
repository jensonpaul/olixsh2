#!/usr/bin/env bash
###
# Interpréteur olixsh
# ==============================================================================
# ------------------------------------------------------------------------------
# @package olixsh
# @author Olivier <sabinus52@gmail.com>
##

#set -e


###
# Détermination où se trouve le framework pour s'y placer
##
if [ -L $0 ]; then
    OLIX_ROOT_SCRIPT=$(readlink $0)
else
    OLIX_ROOT_SCRIPT=$0
fi
OLIX_ROOT=$(dirname $OLIX_ROOT_SCRIPT)
cd ${OLIX_ROOT}


###
# Version
##
if [[ -r VERSION ]]; then
    OLIX_VERSION=$(cat VERSION)
else
    OLIX_VERSION="2.alpha"
fi


###
# Chargement des librairies
##
source include/constant.inc.sh
source include/core.inc.sh
source include/logger.inc.sh
source include/stdout.inc.sh
source include/command.inc.sh
source include/module.inc.sh


logger_checkLogger


###
# Gestion des options et arguments
##
OLIX_ARGS=""
while [[ $# -ge 1 ]]; do
    case $1 in
        -d|--debug) 
            OLIX_OPTION_VERBOSEDEBUG=true
            OLIX_OPTION_VERBOSE=true
            OLIX_LOGGER_LEVEL="debug"
            ;;
        -v|--verbose) 
            OLIX_OPTION_VERBOSE=true
            OLIX_LOGGER_LEVEL="info"
            ;;
        --no-warnings)
            OLIX_OPTION_WARNINGS=false
            ;;
        -h|--help)
            OLIX_OPTION_HELP=true
            ;;
        --version)
            stdout_printVersion
            core_exit 0
            ;;
        
        *)
            OLIX_ARGS="${OLIX_ARGS} $1"
            ;;
    esac
    shift
done

logger_info "Version : ${OLIX_VERSION}"
logger_debug "OLIX_ARGS=${OLIX_ARGS}"


###
# Affichage de l'aide
##
[[ ${OLIX_OPTION_HELP} == true ]] && stdout_printUsage && core_exit 0
[[ -z ${OLIX_ARGS} ]] && stdout_printUsage && core_exit 0


core_checkInstall ${OLIX_ARGS}

command_execute ${OLIX_ARGS}

echo 'FIN'


core_exit 0
